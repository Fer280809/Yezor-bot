// Generador avanzado de nicks con muchos tipos de letra Unicode y tambi√©n variantes con s√≠mbolos decorativos
// By Copilot & Fer280809

const fuentes = [
    { name: "Negrita", map: { A:"ùóî",B:"ùóï",C:"ùóñ",D:"ùóó",E:"ùóò",F:"ùóô",G:"ùóö",H:"ùóõ",I:"ùóú",J:"ùóù",K:"ùóû",L:"ùóü",M:"ùó†",N:"ùó°",O:"ùó¢",P:"ùó£",Q:"ùó§",R:"ùó•",S:"ùó¶",T:"ùóß",U:"ùó®",V:"ùó©",W:"ùó™",X:"ùó´",Y:"ùó¨",Z:"ùó≠",a:"ùóÆ",b:"ùóØ",c:"ùó∞",d:"ùó±",e:"ùó≤",f:"ùó≥",g:"ùó¥",h:"ùóµ",i:"ùó∂",j:"ùó∑",k:"ùó∏",l:"ùóπ",m:"ùó∫",n:"ùóª",o:"ùóº",p:"ùóΩ",q:"ùóæ",r:"ùóø",s:"ùòÄ",t:"ùòÅ",u:"ùòÇ",v:"ùòÉ",w:"ùòÑ",x:"ùòÖ",y:"ùòÜ",z:"ùòá" }},
    { name: "Cursiva", map: { A:"ùê¥",B:"ùêµ",C:"ùê∂",D:"ùê∑",E:"ùê∏",F:"ùêπ",G:"ùê∫",H:"ùêª",I:"ùêº",J:"ùêΩ",K:"ùêæ",L:"ùêø",M:"ùëÄ",N:"ùëÅ",O:"ùëÇ",P:"ùëÉ",Q:"ùëÑ",R:"ùëÖ",S:"ùëÜ",T:"ùëá",U:"ùëà",V:"ùëâ",W:"ùëä",X:"ùëã",Y:"ùëå",Z:"ùëç",a:"ùëé",b:"ùëè",c:"ùëê",d:"ùëë",e:"ùëí",f:"ùëì",g:"ùëî",h:"‚Ñé",i:"ùëñ",j:"ùëó",k:"ùëò",l:"ùëô",m:"ùëö",n:"ùëõ",o:"ùëú",p:"ùëù",q:"ùëû",r:"ùëü",s:"ùë†",t:"ùë°",u:"ùë¢",v:"ùë£",w:"ùë§",x:"ùë•",y:"ùë¶",z:"ùëß" }},
    { name: "Negrita Cursiva", map: { A:"ùë®",B:"ùë©",C:"ùë™",D:"ùë´",E:"ùë¨",F:"ùë≠",G:"ùëÆ",H:"ùëØ",I:"ùë∞",J:"ùë±",K:"ùë≤",L:"ùë≥",M:"ùë¥",N:"ùëµ",O:"ùë∂",P:"ùë∑",Q:"ùë∏",R:"ùëπ",S:"ùë∫",T:"ùëª",U:"ùëº",V:"ùëΩ",W:"ùëæ",X:"ùëø",Y:"ùíÄ",Z:"ùíÅ",a:"ùíÇ",b:"ùíÉ",c:"ùíÑ",d:"ùíÖ",e:"ùíÜ",f:"ùíá",g:"ùíà",h:"ùíâ",i:"ùíä",j:"ùíã",k:"ùíå",l:"ùíç",m:"ùíé",n:"ùíè",o:"ùíê",p:"ùíë",q:"ùíí",r:"ùíì",s:"ùíî",t:"ùíï",u:"ùíñ",v:"ùíó",w:"ùíò",x:"ùíô",y:"ùíö",z:"ùíõ" }},
    { name: "Monoespaciada", map: { A:"ùô∞",B:"ùô±",C:"ùô≤",D:"ùô≥",E:"ùô¥",F:"ùôµ",G:"ùô∂",H:"ùô∑",I:"ùô∏",J:"ùôπ",K:"ùô∫",L:"ùôª",M:"ùôº",N:"ùôΩ",O:"ùôæ",P:"ùôø",Q:"ùöÄ",R:"ùöÅ",S:"ùöÇ",T:"ùöÉ",U:"ùöÑ",V:"ùöÖ",W:"ùöÜ",X:"ùöá",Y:"ùöà",Z:"ùöâ",a:"ùöä",b:"ùöã",c:"ùöå",d:"ùöç",e:"ùöé",f:"ùöè",g:"ùöê",h:"ùöë",i:"ùöí",j:"ùöì",k:"ùöî",l:"ùöï",m:"ùöñ",n:"ùöó",o:"ùöò",p:"ùöô",q:"ùöö",r:"ùöõ",s:"ùöú",t:"ùöù",u:"ùöû",v:"ùöü",w:"ùö†",x:"ùö°",y:"ùö¢",z:"ùö£" }},
    { name: "Doble l√≠nea", map: { A:"ùî∏",B:"ùîπ",C:"‚ÑÇ",D:"ùîª",E:"ùîº",F:"ùîΩ",G:"ùîæ",H:"‚Ñç",I:"ùïÄ",J:"ùïÅ",K:"ùïÇ",L:"ùïÉ",M:"ùïÑ",N:"‚Ñï",O:"ùïÜ",P:"‚Ñô",Q:"‚Ñö",R:"‚Ñù",S:"ùïä",T:"ùïã",U:"ùïå",V:"ùïç",W:"ùïé",X:"ùïè",Y:"ùïê",Z:"‚Ñ§",a:"ùïí",b:"ùïì",c:"ùïî",d:"ùïï",e:"ùïñ",f:"ùïó",g:"ùïò",h:"ùïô",i:"ùïö",j:"ùïõ",k:"ùïú",l:"ùïù",m:"ùïû",n:"ùïü",o:"ùï†",p:"ùï°",q:"ùï¢",r:"ùï£",s:"ùï§",t:"ùï•",u:"ùï¶",v:"ùïß",w:"ùï®",x:"ùï©",y:"ùï™",z:"ùï´" }},
    { name: "G√≥tica", map: { A:"ùîÑ",B:"ùîÖ",C:"‚Ñ≠",D:"ùîá",E:"ùîà",F:"ùîâ",G:"ùîä",H:"‚Ñå",I:"‚Ñë",J:"ùîç",K:"ùîé",L:"ùîè",M:"ùîê",N:"ùîë",O:"ùîí",P:"ùîì",Q:"ùîî",R:"‚Ñú",S:"ùîñ",T:"ùîó",U:"ùîò",V:"ùîô",W:"ùîö",X:"ùîõ",Y:"ùîú",Z:"‚Ñ®",a:"ùîû",b:"ùîü",c:"ùî†",d:"ùî°",e:"ùî¢",f:"ùî£",g:"ùî§",h:"ùî•",i:"ùî¶",j:"ùîß",k:"ùî®",l:"ùî©",m:"ùî™",n:"ùî´",o:"ùî¨",p:"ùî≠",q:"ùîÆ",r:"ùîØ",s:"ùî∞",t:"ùî±",u:"ùî≤",v:"ùî≥",w:"ùî¥",x:"ùîµ",y:"ùî∂",z:"ùî∑" }},
    { name: "G√≥tica Negrita", map: { A:"ùï¨",B:"ùï≠",C:"ùïÆ",D:"ùïØ",E:"ùï∞",F:"ùï±",G:"ùï≤",H:"ùï≥",I:"ùï¥",J:"ùïµ",K:"ùï∂",L:"ùï∑",M:"ùï∏",N:"ùïπ",O:"ùï∫",P:"ùïª",Q:"ùïº",R:"ùïΩ",S:"ùïæ",T:"ùïø",U:"ùñÄ",V:"ùñÅ",W:"ùñÇ",X:"ùñÉ",Y:"ùñÑ",Z:"ùñÖ",a:"ùñÜ",b:"ùñá",c:"ùñà",d:"ùñâ",e:"ùñä",f:"ùñã",g:"ùñå",h:"ùñç",i:"ùñé",j:"ùñè",k:"ùñê",l:"ùñë",m:"ùñí",n:"ùñì",o:"ùñî",p:"ùñï",q:"ùññ",r:"ùñó",s:"ùñò",t:"ùñô",u:"ùñö",v:"ùñõ",w:"ùñú",x:"ùñù",y:"ùñû",z:"ùñü" }},
    { name: "Fullwidth", map: { A:"Ôº°",B:"Ôº¢",C:"Ôº£",D:"Ôº§",E:"Ôº•",F:"Ôº¶",G:"Ôºß",H:"Ôº®",I:"Ôº©",J:"Ôº™",K:"Ôº´",L:"Ôº¨",M:"Ôº≠",N:"ÔºÆ",O:"ÔºØ",P:"Ôº∞",Q:"Ôº±",R:"Ôº≤",S:"Ôº≥",T:"Ôº¥",U:"Ôºµ",V:"Ôº∂",W:"Ôº∑",X:"Ôº∏",Y:"Ôºπ",Z:"Ôº∫",a:"ÔΩÅ",b:"ÔΩÇ",c:"ÔΩÉ",d:"ÔΩÑ",e:"ÔΩÖ",f:"ÔΩÜ",g:"ÔΩá",h:"ÔΩà",i:"ÔΩâ",j:"ÔΩä",k:"ÔΩã",l:"ÔΩå",m:"ÔΩç",n:"ÔΩé",o:"ÔΩè",p:"ÔΩê",q:"ÔΩë",r:"ÔΩí",s:"ÔΩì",t:"ÔΩî",u:"ÔΩï",v:"ÔΩñ",w:"ÔΩó",x:"ÔΩò",y:"ÔΩô",z:"ÔΩö" }},
    { name: "Subrayada", map: Object.fromEntries("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("").map(l => [l, l + "\u0332"])) },
    { name: "Tachada", map: Object.fromEntries("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("").map(l => [l, l + "\u0336"])) },
    { name: "Sub√≠ndice", map: { A:"‚Çê",E:"‚Çë",H:"‚Çï",I:"·µ¢",J:"‚±º",K:"‚Çñ",L:"‚Çó",M:"‚Çò",N:"‚Çô",O:"‚Çí",P:"‚Çö",R:"·µ£",S:"‚Çõ",T:"‚Çú",U:"·µ§",V:"·µ•",X:"‚Çì",a:"‚Çê",e:"‚Çë",h:"‚Çï",i:"·µ¢",j:"‚±º",k:"‚Çñ",l:"‚Çó",m:"‚Çò",n:"‚Çô",o:"‚Çí",p:"‚Çö",r:"·µ£",s:"‚Çõ",t:"‚Çú",u:"·µ§",v:"·µ•",x:"‚Çì"} },
    { name: "Super√≠ndice", map: { A:"·¥¨",B:"·¥Æ",D:"·¥∞",E:"·¥±",G:"·¥≥",H:"·¥¥",I:"·¥µ",J:"·¥∂",K:"·¥∑",L:"·¥∏",M:"·¥π",N:"·¥∫",O:"·¥º",P:"·¥æ",R:"·¥ø",T:"·µÄ",U:"·µÅ",V:"‚±Ω",W:"·µÇ",a:"·µÉ",b:"·µá",c:"·∂ú",d:"·µà",e:"·µâ",f:"·∂†",g:"·µç",h:" ∞",i:"‚Å±",j:" ≤",k:"·µè",l:"À°",m:"·µê",n:"‚Åø",o:"·µí",p:"·µñ",r:" ≥",s:"À¢",t:"·µó",u:"·µò",v:"·µõ",w:" ∑",x:"À£",y:" ∏",z:"·∂ª" }},
    { name: "Peque√±a", map: { A:"·¥Ä",B:" ô",C:"·¥Ñ",D:"·¥Ö",E:"·¥á",F:"Íú∞",G:"…¢",H:" ú",I:"…™",J:"·¥ä",K:"·¥ã",L:" ü",M:"·¥ç",N:"…¥",O:"·¥è",P:"·¥ò",Q:"«´",R:" Ä",S:"s",T:"·¥õ",U:"·¥ú",V:"·¥†",W:"·¥°",X:"x",Y:" è",Z:"·¥¢",a:"·¥Ä",b:" ô",c:"·¥Ñ",d:"·¥Ö",e:"·¥á",f:"Íú∞",g:"…¢",h:" ú",i:"…™",j:"·¥ä",k:"·¥ã",l:" ü",m:"·¥ç",n:"…¥",o:"·¥è",p:"·¥ò",q:"«´",r:" Ä",s:"s",t:"·¥õ",u:"·¥ú",v:"·¥†",w:"·¥°",x:"x",y:" è",z:"·¥¢" }},
    { name: "Invertida", map: Object.fromEntries("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("").map((l, i) => [l, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("").reverse()[i]])) },
    // Ahora, variantes con s√≠mbolos decorativos (no solo letras):
    ...Array.from({length: 20}, (_, i) => {
        // Usamos decoradores emoji/s√≠mbolo para simular m√°s "tipos de letra"
        const base = [
          "‚òÖ","‚ú¶","‚úß","‚ú™","‚ú©","‚ú´","‚ú≠","‚úØ","‚ú∞","‚ùÇ",
          "‚ùá","‚ùà","‚ùâ","‚ùä","‚ùñ","‚üÜ","‚üÖ","‚öù","‚öö","‚öõ"
        ];
        let deco = base[i % base.length];
        let map = {};
        for (let c of "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz") map[c] = deco + c + deco;
        return { name: `Simbolo ${i+1} ${deco}`, map };
    })
  ];
  
  const decoradores = [
    { name: "Cl√°sico", pre: "„Äé", post: "„Äè" },
    { name: "Espadas", pre: "‡ºí", post: "‡ºí" },
    { name: "Rey", pre: "‚ôõ", post: "‚ôõ" },
    { name: "Estrella", pre: "‚òÖ", post: "‚òÖ" },
    { name: "Coraz√≥n", pre: "‚ù•", post: "‚ù•" },
    { name: "Flor", pre: "‚úø", post: "‚úø" },
    { name: "Check", pre: "", post: "‚úì" },
    { name: "Random", pre: "‰∫ó", post: "‰∫ó" },
    { name: "Flecha", pre: "‚û§", post: "" },
    { name: "Ninja", pre: "„ÉÑ", post: "" },
    { name: "Gato", pre: "‡∏Ö^‚Ä¢Ôªå‚Ä¢^‡∏Ö", post: "" },
    { name: "C√≠rculo", pre: "‚¨§", post: "‚¨§" },
    { name: "Rayo", pre: "‚ö°", post: "‚ö°" },
    { name: "Corona", pre: "üëë", post: "üëë" },
    { name: "Alien", pre: "üëΩ", post: "üëæ" },
    { name: "Fuego", pre: "üî•", post: "üî•" },
    { name: "M√∫sica", pre: "üéµ", post: "üé∂" },
    { name: "Drag√≥n", pre: "üêâ", post: "üê≤" },
    { name: "Flor2", pre: "üå∏", post: "üå∫" },
  ];
  
  function aFuente(text, map) {
    return text.split('').map(l => map[l] || l).join('');
  }
  
  let handler = async (m, { args, command }) => {
    if (!args[0]) {
      let fuentesList = fuentes.map((f, i) => `${i+1}. ${f.name}`).join('\n');
      let decoList = decoradores.map((d, i) => `${i+1}. ${d.name}`).join('\n');
      return m.reply(
  `‚ú® *Generador avanzado de nombres y nicks*
  
  Ejemplo:
  !${command} Shadow 2 8
  
  Primer n√∫mero = tipo de letra, segundo = decorador opcional.
  
  *Tipos de letra:*
  ${fuentesList}
  
  *Decoradores:*
  ${decoList}
  
  Si solo pones el nombre, recibes muchas variantes aleatorias.
  `
      );
    }
  
    let base = args[0];
    let fuenteIdx = (parseInt(args[1]) || Math.floor(Math.random()*fuentes.length)) - 1;
    let decoIdx = (parseInt(args[2]) || Math.floor(Math.random()*decoradores.length)) - 1;
  
    fuenteIdx = Math.max(0, Math.min(fuenteIdx, fuentes.length-1));
    decoIdx = Math.max(0, Math.min(decoIdx, decoradores.length-1));
  
    let fuente = fuentes[fuenteIdx];
    let decorador = decoradores[decoIdx];
  
    let principal = decorador.pre + aFuente(base, fuente.map) + decorador.post;
  
    // Variantes extra creativas
    let extras = [];
    for (let i = 0; i < 8; i++) {
      let randFuente = fuentes[Math.floor(Math.random()*fuentes.length)];
      let randDeco = decoradores[Math.floor(Math.random()*decoradores.length)];
      extras.push(randDeco.pre + aFuente(base, randFuente.map) + randDeco.post);
    }
    // Bonus: reversa, todo mayus, todo minus, espaciado
    extras.push(base.split('').reverse().join(''));
    extras.push(base.toUpperCase());
    extras.push(base.toLowerCase());
    extras.push(base.split('').join(' '));
  
    let msg = `‚ú® *Tu nombre creativo:*\n${principal}\n\n*Otras variantes:*\n- `+extras.join('\n- ');
    m.reply(msg);
  };
  
  handler.help = ['nombre <texto> [tipoLetra] [decorador]'];
  handler.tags = ['tools', 'fun', 'nick'];
  handler.command = ['nombre','nombres','nick','nickname','crearnick','creanombre'];
  export default handler;
